CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(yocto4)
INCLUDE(share/rules.cmake)

SET(CMAKE_INSTALL_PREFIX ${PROJECT_SOURCE_DIR}/../sdk)

ADD_SUBDIRECTORY(y-main)
ADD_SUBDIRECTORY(y-thr)
ADD_SUBDIRECTORY(y-fs)
ADD_SUBDIRECTORY(y-kr)
ADD_SUBDIRECTORY(y-net)
ADD_SUBDIRECTORY(y-mpk)
ADD_SUBDIRECTORY(y-mk)
ADD_SUBDIRECTORY(y-fft)

INSTALL( FILES share/rules.cmake DESTINATION share/yocto )

########################################################################
IF(UNIX)
  GET_FILENAME_COMPONENT(CXX_NICKNAME ${CMAKE_CXX_COMPILER} NAME)
ELSE()
  GET_FILENAME_COMPONENT(CXX_NICKNAME ${CMAKE_CXX_COMPILER} NAME_WE)
ENDIF()

SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "yocto")
SET(CPACK_PACKAGE_VENDOR "Yann Bouret")
SET(CPACK_PACKAGE_VERSION "4.0" )

SET(CPACK_DEBIAN_PACKAGE_MAINTAINER    "Yann Bouret")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY  "C++ cross platform libraries" )
SET(CPACK_PACKAGE_DESCRIPTION          "Yocto Offerts C++ Tools ans Objects" )
SET(CPACK_DEBIAN_PACKAGE_SECTION       "Development" )
EXEC_PROGRAM( dpkg ARGS "--print-architecture" OUTPUT_VARIABLE CPACK_DEBIAN_PACKAGE_ARCHITECTURE )

IF( ON_MACOSX OR WIN32 )
  SET(CPACK_PACKAGE_FILE_NAME "yocto-${CMAKE_SYSTEM_NAME}-${CXX_NICKNAME}")
ELSE()
  SET(CPACK_PACKAGE_FILE_NAME "yocto-${CMAKE_SYSTEM_NAME}-${BUILD_MACHINE}-${CXX_NICKNAME}")
ENDIF()

SET(CPACK_PACKAGING_INSTALL_PREFIX "/opt/local")
SET(CPACK_GENERATOR "ZIP")

INCLUDE(CPack)

