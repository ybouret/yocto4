  0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3b, 0x0a, 0x0a, 0x43, 0x4f, 0x44, 0x45, 0x3a, 0x20 /*|.Script;..CODE: |*/
, 0x28, 0x61, 0x72, 0x67, 0x73, 0x20, 0x45, 0x4e, 0x44, 0x29, 0x2a, 0x3b, 0x0a, 0x0a, 0x2f, 0x2f /*|(args END)*;..//|*/
, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20 /*| write rules by |*/
, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x69, 0x6f, 0x72 /*|increasing prior|*/
, 0x69, 0x74, 0x79, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69 /*|ity.termExpressi|*/
, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x28, 0x50, 0x4c, 0x55, 0x53, 0x7c, 0x4d, 0x49, 0x4e, 0x55, 0x53 /*|on : (PLUS|MINUS|*/
, 0x29, 0x3f, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f /*|)? multExpressio|*/
, 0x6e, 0x20, 0x28, 0x28, 0x50, 0x4c, 0x55, 0x53, 0x7c, 0x4d, 0x49, 0x4e, 0x55, 0x53, 0x29, 0x20 /*|n ((PLUS|MINUS) |*/
, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x29 /*| multExpression)|*/
, 0x2a, 0x3b, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f /*|*;.multExpressio|*/
, 0x6e, 0x20, 0x3a, 0x20, 0x65, 0x78, 0x70, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69 /*|n : expnExpressi|*/
, 0x6f, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x4d, 0x55, 0x4c, 0x7c, 0x44, 0x49, 0x56, 0x7c, 0x4d, 0x4f /*|on ( (MUL|DIV|MO|*/
, 0x44, 0x29, 0x20, 0x65, 0x78, 0x70, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f /*|D) expnExpressio|*/
, 0x6e, 0x20, 0x29, 0x2a, 0x3b, 0x0a, 0x65, 0x78, 0x70, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73 /*|n )*;.expnExpres|*/
, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x28, 0x20, 0x45 /*|sion : value ( E|*/
, 0x58, 0x50, 0x4e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x2a, 0x3b, 0x0a, 0x61, 0x72, 0x67 /*|XPN value)*;.arg|*/
, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3a, 0x20, 0x74, 0x65 /*|s           : te|*/
, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x20, 0x27 /*|rmExpression ( .|*/
, 0x2c, 0x27, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f /*|,. termExpressio|*/
, 0x6e, 0x20, 0x29, 0x2a, 0x3b, 0x0a, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x20 /*|n )*;.function  |*/
, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3a, 0x20, 0x49, 0x44, 0x20, 0x4c, 0x50, 0x41, 0x52, 0x45, 0x4e /*|     : ID LPAREN|*/
, 0x20, 0x61, 0x72, 0x67, 0x73, 0x20, 0x52, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x3b, 0x0a, 0x2f, 0x2f /*| args RPAREN;.//|*/
, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x67 /*| write value + g|*/
, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x3a, 0x20 /*|rouping.value : |*/
, 0x49, 0x4e, 0x54, 0x20, 0x7c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x7c /*|INT | function ||*/
, 0x20, 0x49, 0x44, 0x20, 0x7c, 0x20, 0x4c, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x20, 0x74, 0x65, 0x72 /*| ID | LPAREN ter|*/
, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x52, 0x50, 0x41, 0x52 /*|mExpression RPAR|*/
, 0x45, 0x4e, 0x3b, 0x0a, 0x0a, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x20, 0x3a, 0x20, 0x27, 0x2b, 0x27 /*|EN;..PLUS  : .+.|*/
, 0x3b, 0x0a, 0x4d, 0x49, 0x4e, 0x55, 0x53, 0x20, 0x3a, 0x20, 0x27, 0x2d, 0x27, 0x3b, 0x0a, 0x0a /*|;.MINUS : .-.;..|*/
, 0x4d, 0x55, 0x4c, 0x20, 0x20, 0x20, 0x3a, 0x20, 0x27, 0x2a, 0x27, 0x3b, 0x0a, 0x44, 0x49, 0x56 /*|MUL   : .*.;.DIV|*/
, 0x20, 0x20, 0x20, 0x3a, 0x20, 0x27, 0x2f, 0x27, 0x3b, 0x0a, 0x4d, 0x4f, 0x44, 0x20, 0x20, 0x20 /*|   : ./.;.MOD   |*/
, 0x3a, 0x20, 0x27, 0x25, 0x27, 0x3b, 0x0a, 0x0a, 0x45, 0x58, 0x50, 0x4e, 0x20, 0x20, 0x3a, 0x20 /*|: .%.;..EXPN  : |*/
, 0x27, 0x5e, 0x27, 0x3b, 0x0a, 0x0a, 0x4c, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x20, 0x3a, 0x20, 0x27 /*|.^.;..LPAREN : .|*/
, 0x28, 0x27, 0x3b, 0x0a, 0x52, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x20, 0x3a, 0x20, 0x27, 0x29, 0x27 /*|(.;.RPAREN : .).|*/
, 0x3b, 0x0a, 0x0a, 0x49, 0x4e, 0x54, 0x20, 0x3a, 0x20, 0x22, 0x5b, 0x3a, 0x64, 0x69, 0x67, 0x69 /*|;..INT : "[:digi|*/
, 0x74, 0x3a, 0x5d, 0x2b, 0x22, 0x3b, 0x0a, 0x49, 0x44, 0x20, 0x20, 0x3a, 0x20, 0x22, 0x5b, 0x5f /*|t:]+";.ID  : "[_|*/
, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5d, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a /*|[:word:]][:word:|*/
, 0x5d, 0x2a, 0x22, 0x3b, 0x0a, 0x45, 0x4e, 0x44, 0x20, 0x3a, 0x20, 0x27, 0x3b, 0x27, 0x3b, 0x0a /*|]*";.END : .;.;.|*/
, 0x0a, 0x2f, 0x2f, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x0a, 0x24, 0x6e, 0x6f /*|.// modifier.$no|*/
, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x3a, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x70 /*|_single: termExp|*/
, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x70, 0x72 /*|ression multExpr|*/
, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x78, 0x70, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65 /*|ession expnExpre|*/
, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x72, 0x67, 0x73, 0x3b, 0x0a, 0x24, 0x6f, 0x6e, 0x65 /*|ssion args;.$one|*/
, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x3a, 0x20, 0x61, 0x72, 0x67, 0x73, 0x3b, 0x0a, 0x0a, 0x2f /*|_level: args;../|*/
, 0x2f, 0x20, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x0a /*|/ lexical rules.|*/
, 0x2f, 0x2f, 0x40, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x3a, 0x20, 0x22, 0x63, 0x73, 0x74 /*|//@string : "cst|*/
, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3b, 0x0a, 0x40, 0x64, 0x72, 0x6f, 0x70, 0x20, 0x20, 0x20, 0x3a /*|ring";.@drop   :|*/
, 0x20, 0x22, 0x5b, 0x3a, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x3a, 0x5d, 0x22, 0x3b, 0x0a, 0x40, 0x65 /*| "[:blank:]";.@e|*/
, 0x6e, 0x64, 0x6c, 0x20, 0x20, 0x20, 0x3a, 0x20, 0x22, 0x5b, 0x3a, 0x65, 0x6e, 0x64, 0x6c, 0x3a /*|ndl   : "[:endl:|*/
, 0x5d, 0x22, 0x3b, 0x0a                                                                         /*|]";.            |*/
