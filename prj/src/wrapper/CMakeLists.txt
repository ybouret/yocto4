PROJECT(wrapper)

INCLUDE(${SDK}/share/yocto/swig.cmake)

IF(SWIG_FOUND)
	SWIG_WRAPPER(sample python)
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
ENDIF()

#SET(SWIG_FOUND OFF)
#FIND_PROGRAM(SWIG swig)

#IF( ${SWIG} STREQUAL "SWIG-NOTFOUND" )
	#MESSAGE( STATUS "no SWIG available")
#ELSE()
	#SET(SWIG_FOUND ON)
	#MESSAGE( STATUS "SWIG is ${SWIG}" )
	#FIND_PACKAGE(PythonLibs)
	#INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})
	#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
	#ADD_CUSTOM_COMMAND( OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/sample_wrapper.cpp
											#COMMAND ${SWIG} -c++ -python -o ${CMAKE_CURRENT_BINARY_DIR}/sample_wrapper.cpp ${CMAKE_CURRENT_SOURCE_DIR}/sample.i
											#DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/sample.hpp ${CMAKE_CURRENT_SOURCE_DIR}/sample.i )
	#ADD_LIBRARY(sample MODULE sample.hpp sample.cpp sample_wrapper.cpp)
	#TARGET_LINK_LIBRARIES(sample ${PYTHON_LIBRARIES})
	
	#GET_TARGET_PROPERTY(LIB_NAME  sample LOCATION)
	#MESSAGE( STATUS "LIB_NAME=${LIB_NAME}")
	#ADD_CUSTOM_COMMAND(
		#TARGET sample
		#POST_BUILD
		#COMMAND ${CMAKE_COMMAND} -E copy ${LIB_NAME} _sample.so
		#)
	##SET_TARGET_PROPERTIES(sample PROPERTIES OUTPUT_NAME _sample.so)
#ENDIF()

